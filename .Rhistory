git global --list
git config --list
config --list
--list
find.package("devtools")
find.package("devtools")
install.packages("devtools")
find_rtools()
libary(devtools)
library(devtools)
exit
exit
find.package("devtools")
install.packages("KernSmooth")
remove.packages("KernSmooth", lib="C:/Program Files/R/R-3.2.1/library")
libary(KernSmooth)
library(KernSmooth)
exit
quit
find.package("devtools")
install.packages("devtools")
find.package("devtools")
find.package("devtool")
find.package("rtools")
install.packages("xtable")
install.packages("xtable", type="source")
find.package("devtools")
sys.getenv("PATH")
Sys.getenv("PATH")
system('g++ -v')
find.package("devtools")
install.packages("devtools")
find_rtools()
library(devtools)
find_rtools()
library devtools
libray "devtools"
library devtools
library "devtools"
clear
cls
library(devtools)
x <- 1:10
if(x > 5) { x <- 0}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flag[, 11:17]
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flag[, 19:23]
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,6,6))
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_val, length)
lapply(unique_val, length)
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_Vals, function(elem) elem[2])
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
vapply(flags, unique, numeric(1))
ok()
sapply(flags,class)
vapply(flags,class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flas$population, flags$red, summary)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
memory.size
memory.size()
memory.limit()
memory.profile()
?hist
?points
?xyplot
??xyplot
install.packages("lattice")
?xyplot
?bwplot
bwplot()
library(lattice)
bwplot()
library(nlme)
xyplot(weight ~ Time | Diet, Bodyweight)
xyplot(weight ~ Time | Diet, BodyWeight)
?xyplot
?lines
?text
library(datasets)
data(airquality)
p <- xyplot( Ozone ~ Wind | factor(Month), data = airquality)
xyplot(p)
p
?print.trellis
print.trellis(p)
print.trellis
print.trillis
?print.trellis
print(p)
?splom
?trellis.par.set
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
install.packages("ggplot2")
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
?geom
??geom
g <- ggplot(movies, aes(votes, rating)
print(g)
g2 <- g + geom_point()
g <- ggplot(movies, aes(votes, rating)
g <- ggplot(movies, aes(votes, rating))
print(g)
g2 <- g + geom_point()
g2
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
?panel.lmline
?lines
?axis
?text
?panel.lmline
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
setwd("D:/Data Science Course/Exploratory Data Analysis/Project 1/ExData_Plotting1")
source('D:/Data Science Course/Exploratory Data Analysis/Project 1/ExData_Plotting1/plot3.R')
source('D:/Data Science Course/Exploratory Data Analysis/Project 1/ExData_Plotting1/plot3.R')
